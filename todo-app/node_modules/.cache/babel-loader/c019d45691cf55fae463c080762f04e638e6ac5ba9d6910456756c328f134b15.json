{"ast":null,"code":"var _jsxFileName = \"/Users/abhi/Library/CloudStorage/OneDrive-OregonStateUniversity/Jaaidat/KNOWLEDGE/Udemy Spring Course/React/frontend-01/todo-app/src/components/todo/security/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { executeBasicAuthenticationService } from \"../api/HelloWorldApiService\";\n\n// Create a context and export it so that it is accessible to other components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// share the context with other components, children is all the components under AuthProvider\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  // put some state in the context\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [token, setToken] = useState(null);\n  async function login(username, password) {\n    const token = \"Basic \" + window.btoa(username + \":\" + password);\n    const response = await executeBasicAuthenticationService(token);\n    if (response.status === 200) {\n      setIsAuthenticated(true);\n      setUsername(username);\n      setToken(token);\n      return true;\n    } else {\n      setIsAuthenticated(false);\n      setUsername(null);\n      setToken(null);\n      return false;\n    }\n  }\n  function logout() {\n    setIsAuthenticated(false);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      username\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"Wn1PhaPiXLNtyW2AbFOo/bgRy6A=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","executeBasicAuthenticationService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","username","setUsername","token","setToken","login","password","window","btoa","response","status","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhi/Library/CloudStorage/OneDrive-OregonStateUniversity/Jaaidat/KNOWLEDGE/Udemy Spring Course/React/frontend-01/todo-app/src/components/todo/security/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport { executeBasicAuthenticationService } from \"../api/HelloWorldApiService\";\n\n// Create a context and export it so that it is accessible to other components\nexport const AuthContext = createContext()\nexport const useAuth = () => useContext(AuthContext)\n\n// share the context with other components, children is all the components under AuthProvider\nexport default function AuthProvider({ children }) {\n\n    // put some state in the context\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\n    \n    const [username, setUsername] = useState(null)\n    const [token, setToken] = useState(null)\n\n    async function login(username, password) {\n        const token = \"Basic \" + window.btoa(username+\":\"+password)\n        const response = await executeBasicAuthenticationService(token)\n        \n        if (response.status===200) {\n            setIsAuthenticated(true)\n            setUsername(username)\n            setToken(token)\n            return true\n        } else {\n            setIsAuthenticated(false)\n            setUsername(null)\n            setToken(null)\n            return false\n        }\n    }\n\n    function logout() {\n        setIsAuthenticated(false)\n    }\n\n    return (\n        <AuthContext.Provider value={ {isAuthenticated, login, logout, username} }>\n            {children}\n        </AuthContext.Provider>\n    );\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,iCAAiC,QAAQ,6BAA6B;;AAE/E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAC1C,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,eAAe,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAE/C;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExC,eAAegB,KAAKA,CAACJ,QAAQ,EAAEK,QAAQ,EAAE;IACrC,MAAMH,KAAK,GAAG,QAAQ,GAAGI,MAAM,CAACC,IAAI,CAACP,QAAQ,GAAC,GAAG,GAACK,QAAQ,CAAC;IAC3D,MAAMG,QAAQ,GAAG,MAAMnB,iCAAiC,CAACa,KAAK,CAAC;IAE/D,IAAIM,QAAQ,CAACC,MAAM,KAAG,GAAG,EAAE;MACvBV,kBAAkB,CAAC,IAAI,CAAC;MACxBE,WAAW,CAACD,QAAQ,CAAC;MACrBG,QAAQ,CAACD,KAAK,CAAC;MACf,OAAO,IAAI;IACf,CAAC,MAAM;MACHH,kBAAkB,CAAC,KAAK,CAAC;MACzBE,WAAW,CAAC,IAAI,CAAC;MACjBE,QAAQ,CAAC,IAAI,CAAC;MACd,OAAO,KAAK;IAChB;EACJ;EAEA,SAASO,MAAMA,CAAA,EAAG;IACdX,kBAAkB,CAAC,KAAK,CAAC;EAC7B;EAEA,oBACIR,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAG;MAACd,eAAe;MAAEM,KAAK;MAAEM,MAAM;MAAEV;IAAQ,CAAG;IAAAJ,QAAA,EACrEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACnB,GAAA,CAlCuBF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}