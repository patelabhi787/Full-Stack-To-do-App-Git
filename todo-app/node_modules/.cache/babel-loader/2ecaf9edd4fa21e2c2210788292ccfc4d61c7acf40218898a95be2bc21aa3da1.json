{"ast":null,"code":"var _jsxFileName = \"/Users/abhi/Library/CloudStorage/OneDrive-OregonStateUniversity/Jaaidat/KNOWLEDGE/Udemy Spring Course/React/frontend-01/todo-app/src/components/todo/security/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { executeBasicAuthenticationService } from \"../api/HelloWorldApiService\";\nimport { apiClient } from \"../api/ApiClient\";\n\n// Create a context and export it so that it is accessible to other components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// share the context with other components, children is all the components under AuthProvider\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  // put some state in the context\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [token, setToken] = useState(null);\n  async function login(username, password) {\n    const token = \"Basic \" + window.btoa(username + \":\" + password);\n    try {\n      const response = await executeBasicAuthenticationService(token);\n      if (response.status === 200) {\n        setIsAuthenticated(true);\n        setUsername(username);\n        setToken(token);\n        apiClient.interceptors.request.use(config => {\n          config.headers.Authorization = token;\n        });\n        return true;\n      } else {\n        logout();\n        return false;\n      }\n    } catch (error) {\n      logout();\n      return false;\n    }\n  }\n  function logout() {\n    setIsAuthenticated(false);\n    setUsername(null);\n    setToken(null);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      username,\n      token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"Wn1PhaPiXLNtyW2AbFOo/bgRy6A=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","executeBasicAuthenticationService","apiClient","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","username","setUsername","token","setToken","login","password","window","btoa","response","status","interceptors","request","use","config","headers","Authorization","logout","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhi/Library/CloudStorage/OneDrive-OregonStateUniversity/Jaaidat/KNOWLEDGE/Udemy Spring Course/React/frontend-01/todo-app/src/components/todo/security/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport { executeBasicAuthenticationService } from \"../api/HelloWorldApiService\";\nimport { apiClient } from \"../api/ApiClient\";\n\n// Create a context and export it so that it is accessible to other components\nexport const AuthContext = createContext()\nexport const useAuth = () => useContext(AuthContext)\n\n// share the context with other components, children is all the components under AuthProvider\nexport default function AuthProvider({ children }) {\n\n    // put some state in the context\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\n    \n    const [username, setUsername] = useState(null)\n    const [token, setToken] = useState(null)\n\n    async function login(username, password) {\n        const token = \"Basic \" + window.btoa(username+\":\"+password)\n        \n        try {\n            const response = await executeBasicAuthenticationService(token)\n            if (response.status===200) {\n                setIsAuthenticated(true)\n                setUsername(username)\n                setToken(token)\n\n                apiClient.interceptors.request.use(\n                    (config) => {\n                        config.headers.Authorization=token\n                    }\n                )\n\n                return true\n            } else {\n                logout()\n                return false\n            }\n        } catch(error) {\n            logout()\n            return false\n        }\n    }\n\n    function logout() {\n        setIsAuthenticated(false)\n        setUsername(null)\n        setToken(null)\n    }\n\n    return (\n        <AuthContext.Provider value={ {isAuthenticated, login, logout, username, token} }>\n            {children}\n        </AuthContext.Provider>\n    );\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,iCAAiC,QAAQ,6BAA6B;AAC/E,SAASC,SAAS,QAAQ,kBAAkB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAC1C,OAAO,MAAMQ,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,eAAe,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAE/C;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,eAAeiB,KAAKA,CAACJ,QAAQ,EAAEK,QAAQ,EAAE;IACrC,MAAMH,KAAK,GAAG,QAAQ,GAAGI,MAAM,CAACC,IAAI,CAACP,QAAQ,GAAC,GAAG,GAACK,QAAQ,CAAC;IAE3D,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMpB,iCAAiC,CAACc,KAAK,CAAC;MAC/D,IAAIM,QAAQ,CAACC,MAAM,KAAG,GAAG,EAAE;QACvBV,kBAAkB,CAAC,IAAI,CAAC;QACxBE,WAAW,CAACD,QAAQ,CAAC;QACrBG,QAAQ,CAACD,KAAK,CAAC;QAEfb,SAAS,CAACqB,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7BC,MAAM,IAAK;UACRA,MAAM,CAACC,OAAO,CAACC,aAAa,GAACb,KAAK;QACtC,CACJ,CAAC;QAED,OAAO,IAAI;MACf,CAAC,MAAM;QACHc,MAAM,CAAC,CAAC;QACR,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC,OAAMC,KAAK,EAAE;MACXD,MAAM,CAAC,CAAC;MACR,OAAO,KAAK;IAChB;EACJ;EAEA,SAASA,MAAMA,CAAA,EAAG;IACdjB,kBAAkB,CAAC,KAAK,CAAC;IACzBE,WAAW,CAAC,IAAI,CAAC;IACjBE,QAAQ,CAAC,IAAI,CAAC;EAClB;EAEA,oBACIZ,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAG;MAACrB,eAAe;MAAEM,KAAK;MAAEY,MAAM;MAAEhB,QAAQ;MAAEE;IAAK,CAAG;IAAAN,QAAA,EAC5EA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAAC1B,GAAA,CA9CuBF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}